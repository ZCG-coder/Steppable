---
# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Lint
on:
    push:
        branches: ["develop"]
        paths:
            - "**.cpp"
            - "**.hpp"
            - "**.py"
            - "lint.yml"

    pull_request:
        branches: ["main"]
env:
    # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
    BUILD_TYPE: Release
jobs:
    lint:
        # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
        # You can convert this to a matrix build if you need cross-platform coverage.
        # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
        runs-on: macos-latest
        steps:
            - uses: actions/checkout@v4

            - name: Set up Homebrew
              id: set-up-homebrew
              uses: Homebrew/actions/setup-homebrew@master
            - name: Install LLVM
              run: |
                brew install llvm
                echo "/opt/homebrew/opt/llvm/bin:$GITHUB_PATH" > $GITHUB_PATH

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                cache: 'pip'
                python-version: '3.12'

            - name: Install dependencies
              run: pip install .
              shell: bash

            - name: Configure CMake
              # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
              # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
              run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DPYTHON_INCLUDE_DIR=$(python -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())") -DPYTHON_LIBRARY=$(python -c "import distutils.sysconfig as sysconfig; print(sysconfig.get_config_var('LIBDIR'))") -DPYTHON_EXECUTABLE:FILEPATH=`which python`
              shell: bash

            - name: Lint
              run: python -m tools.run_clang_tidy -source-filter='.*lib.*' -p build
